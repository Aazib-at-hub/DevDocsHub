# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

deactivate () {
    # reset old environment variables
    if [ -n "${_OLD_VIRTUAL_PATH:-}" ] ; then
        PATH="${_OLD_VIRTUAL_PATH}"
        export PATH
        unset _OLD_VIRTUAL_PATH
    fi
    if [ -n "${_OLD_VIRTUAL_PYTHONHOME:-}" ] ; then
        PYTHONHOME="${_OLD_VIRTUAL_PYTHONHOME}"
        export PYTHONHOME
        unset _OLD_VIRTUAL_PYTHONHOME
    fi

    # Properly reset hashed commands in bash and zsh
    if [ -n "${BASH:-}" ] || [ -n "${ZSH_VERSION:-}" ]; then
        hash -r 2> /dev/null  # Corrected by adding the -r flag
    fi

    if [ -n "${_OLD_VIRTUAL_PS1:-}" ] ; then  # Added ':-' to handle undefined variables
        PS1="${_OLD_VIRTUAL_PS1}"
        export PS1
        unset _OLD_VIRTUAL_PS1
    fi

    unset VIRTUAL_ENV
    unset VIRTUAL_ENV_PROMPT
    if [ ! "${1:-}" = "nondestructive" ] ; then
        unset -f deactivate
    fi
}

# Unset old virtual environment variables, if any
deactivate nondestructive

# Correct and valid path to the virtual environment
VIRTUAL_ENV="D:/DevDocsHub/venv"  # Ensure this path is valid and correct
export VIRTUAL_ENV

_OLD_VIRTUAL_PATH="$PATH"
PATH="$VIRTUAL_ENV/Scripts:$PATH"
export PATH

# Unset PYTHONHOME if set
if [ -n "${PYTHONHOME:-}" ] ; then
    _OLD_VIRTUAL_PYTHONHOME="${PYTHONHOME}"
    unset PYTHONHOME
fi

# Update shell prompt to indicate virtual environment
if [ -z "${VIRTUAL_ENV_DISABLE_PROMPT:-}" ] ; then
    _OLD_VIRTUAL_PS1="${PS1:-}"  # Use ':-' to handle unset PS1
    PS1="(venv) ${PS1}"
    export PS1
    VIRTUAL_ENV_PROMPT="(venv) "
    export VIRTUAL_ENV_PROMPT
fi

# Handle other shells like bash, zsh, fish
if [ -n "${BASH:-}" ] || [ -n "${ZSH_VERSION:-}" ]; then
    hash -r 2> /dev/null  # Added -r flag to properly reset
fi
